class SyncPusher{constructor(e){if(!e?.key)throw Error("Configuration error: 'key' is required.");if(!e?.api)throw Error("Configuration error: 'api' is required.");this.config={key:e.key,api:e.api,pusherjs:e?.pusherjs||"https://js.pusher.com/8.2.0/pusher.min.js",cluster:e?.cluster||"ap1",channel:e?.channel||"sync-channel",event:e?.event||"sync-event",method:e?.method||"POST",retries:e?.retries||3,delay:e?.delay||1e3,logToConsole:e?.logToConsole||!1},this.initPusher()}initPusher(){if(window.Pusher)this.setupPusher();else{let e=document.createElement("script");e.src=this.config.pusherjs,e.onload=()=>this.setupPusher(),e.onerror=()=>{throw this.log("Failed to load Pusher script.","error"),Error("Pusher script could not be loaded.")},document.body.appendChild(e)}}setupPusher(){Pusher.logToConsole=this.config.logToConsole;let e=new Pusher(this.config.key,{cluster:this.config.cluster}),t=e.subscribe(this.config.channel);t.bind(this.config.event,e=>this.sync(e))}async fetch(e,t,s=this.config.retries,i=this.config.delay){try{let o=await fetch(e,t);if(!o.ok)throw Error(`HTTP error! Status: ${o.status}`);return await o.text()}catch(n){if(s>0)return this.log(`Retrying... (${this.config.retries-s+1})`),await new Promise(e=>setTimeout(e,i)),this.fetch(e,t,s-1,i);throw this.log(`Fetch failed: ${n.message}`,"error"),n}}push(e){let t=new URL(this.config.api),s;return"GET"===this.config.method?(s={method:"GET"},t.searchParams.append("channel",this.config.channel),t.searchParams.append("event",this.config.event),t.searchParams.append("data",encodeURIComponent(e))):s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({channel:this.config.channel,event:this.config.event,data:e})},this.fetch(t,s).then(e=>(this.log(`Data pushed successfully: ${e}`),e)).catch(e=>{throw this.log(`Push failed: ${e.message}`,"error"),e})}sync(e){console.log("Received sync data:",JSON.stringify(e))}log(e,t="log"){this.config.logToConsole&&(console[t]?.(e)||console.log(e))}}